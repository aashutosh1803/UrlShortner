import Head from 'next/head'
import { useState } from 'react'

export default function Home() {
    const [stateLongUrl, setStateLongUrl] = useState('')
    const [stateShortUrl, setStateShortUrl] = useState('')
    const [stateShortToken, setStateShortToken] = useState('')
    const [fetchedLongUrl, setFetchedLongUrl] = useState('')
    const [errorLongUrl, setErrorLongUrl] = useState('')

    const getShortUrl = async longUrl => {
        const response = await fetch('https://9igdoacex0.execute-api.us-east-1.amazonaws.com/dev/', {
            method: 'POST',
            mode: "cors", 
            body: JSON.stringify({
                long_url: longUrl,
            })
        }).then(response => response.json())
        .then(data => {
            console.log("data is : ", data);
            setStateShortUrl(data['short_url']);
        })
        .catch(error => console.error('Error:', error))
    } 

    const getLongUrl = async shortToken => {
        setErrorLongUrl('');
        setFetchedLongUrl('');
        const response = await fetch(
            'https://9igdoacex0.execute-api.us-east-1.amazonaws.com/dev?short_url='+shortToken, {
                method : "GET",
                mode: 'cors',
                headers: {}
            }
        ).then(response => response.json())
        .then(data => {
            console.log("data is : ", data);
            if(data.statusCode == 200)
                setFetchedLongUrl(JSON.parse(data.body)['long_url']);
            else
                setErrorLongUrl(JSON.parse(data.body)['error_msg'])

        })
        .catch(error => console.error('Error:', error))
    } 

    return (
    <div>
        <Head>
        <title>Url Shortner</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        </Head>

        <h1>Welcome to Url Shortner!</h1>

        <h4> Enter Long Url to get converted to Short Token</h4>
        <input type="text"  placeholder="Enter an URL" onChange={(e) => setStateLongUrl(e.target.value)} ></input>
        <button onClick={() => getShortUrl(stateLongUrl)}>Get Short Url</button>
        {stateShortUrl? <p>Short url token is <b>{stateShortUrl}</b> </p> : ''}
        <br/>

        <h4> Enter Short Token to Retrive Long Url</h4>
        <input type="text" onChange={(e) => setStateShortToken(e.target.value)} ></input>
        <button onClick={() => getLongUrl(stateShortToken)}>Get Long Url</button>
        {fetchedLongUrl? <p>Long url from token is <b>{fetchedLongUrl}</b> </p> : ''}
        {errorLongUrl && <p>{errorLongUrl}</p> }
        

    </div>
    )
}
